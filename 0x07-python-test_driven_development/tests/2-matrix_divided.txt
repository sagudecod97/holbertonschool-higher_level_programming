The ``2-matrix_divided`` module
======================

Using ``matrix_divided``
------------------------

>>> matrix_divided = __import__('2-matrix_divided').matrix_divided
>>> matrix = [
...    [1, 2, 3],
...    [4, 5, 6]
... ]

>>> matrix_divided(matrix, 3)
[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

>>> matrix = [
...    5,
...    [1, 2, 3],
...    [4, 5, 6]
... ]

>>> matrix_divided(matrix, 3)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix = [
...    "hola",
...    [1, 2, 3],
...    [4, 5, 6]
... ]

>>> matrix_divided(matrix, 3)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix = [
...    [1, 5],
...    [1, 2, 3],
...    [4, 5, 6]
... ]

>>> matrix_divided(matrix, 3)
Traceback (most recent call last):
TypeError: Each row of the matrix must have the same size

>>> matrix = []

>>> matrix_divided(matrix, 3)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix = [
...    [1, 2, 3],
...    [4, 5, 6]
... ]


>>> matrix_divided(matrix, 0)
Traceback (most recent call last):
ZeroDivisionError: division by zero

>>> matrix_divided(matrix, "hola")
Traceback (most recent call last):
TypeError: div must be a number

>>> type(matrix_divided(matrix, 1)) is list
True

>>> check = []
>>> for row in matrix_divided(matrix, 1):
...     check.append(type(row) is list)
>>> all(check)
True

>>> matrix_divided([[], [], []], 1)
[[], [], []]

